// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChainTag", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("ChainTag");
                });

            modelBuilder.Entity("Core.Common.Chain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PentestObj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StepChainLastId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Chains");
                });

            modelBuilder.Entity("Core.Common.ChainStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly?>("End")
                        .HasColumnType("date");

                    b.Property<int>("FatherChainId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("Start")
                        .HasColumnType("date");

                    b.Property<int>("StepId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FatherChainId");

                    b.ToTable("ChainSteps");
                });

            modelBuilder.Entity("Core.Common.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InstrumentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TagColor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ChainTag", b =>
                {
                    b.HasOne("Core.Common.Chain", null)
                        .WithMany()
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Common.Tag", null)
                        .WithMany()
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Common.ChainStep", b =>
                {
                    b.HasOne("Core.Common.Chain", "FatherChain")
                        .WithMany()
                        .HasForeignKey("FatherChainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FatherChain");
                });
#pragma warning restore 612, 618
        }
    }
}
